/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { MeshDistortMaterial, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { MeshDepthMaterial } from "three";

type GLTFResult = GLTF & {
  nodes: {
    marble_bust_01: THREE.Mesh;
  };
  materials: {
    marble_bust_01: THREE.MeshStandardMaterial;
  };
};

export function Bust(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/assets/models/bust_very_low-transformed.glb"
  ) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.marble_bust_01.geometry}
        material={materials.marble_bust_01}
        position={[0, 0.03, 0]}
      >
        <meshStandardMaterial color="#93c5fd" />
      </mesh>
    </group>
  );
}

useGLTF.preload("/assets/models/bust_very_low-transformed.glb");
